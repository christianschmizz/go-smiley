// Code generated by "stringer -type=PollEventResponseCode"; DO NOT EDIT.

package ssp

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SlaveReset-241]
	_ = x[ReadNote-239]
	_ = x[CreditNote-238]
	_ = x[NoteRejecting-237]
	_ = x[NoteRejected-236]
	_ = x[NoteStacking-204]
	_ = x[NoteStacked-235]
	_ = x[SafeNoteJam-234]
	_ = x[UnsafeNoteJam-233]
	_ = x[Disabled-232]
	_ = x[FraudAttempt-230]
	_ = x[StackerFull-231]
	_ = x[NoteClearedFromFront-225]
	_ = x[NoteClearedToCashbox-226]
	_ = x[CashboxRemoved-227]
	_ = x[CashboxReplaced-228]
	_ = x[BarCodeTicketValidated-229]
	_ = x[BarCodeTicketAcknowledge-209]
	_ = x[NotePathOpen-224]
	_ = x[ChannelDisable-181]
	_ = x[Initialising-182]
	_ = x[Dispensing-218]
	_ = x[Dispensed-210]
	_ = x[Jammed-213]
	_ = x[Halted-214]
	_ = x[Floating-215]
	_ = x[Floated-216]
	_ = x[Timeout-217]
	_ = x[IncompletePayout-220]
	_ = x[IncompleteFloat-221]
	_ = x[CashboxPaid-222]
	_ = x[CoinCredit-223]
	_ = x[CoinMechJammed-196]
	_ = x[CoinMechReturnPressed-197]
	_ = x[Emptying-194]
	_ = x[Emptied-195]
	_ = x[SmartEmptying-179]
	_ = x[SmartEmptied-180]
	_ = x[CoinMechError-183]
	_ = x[NoteStoredInPayout-219]
	_ = x[PayoutOutOfService-198]
	_ = x[JamRecovery-176]
	_ = x[ErrorDuringPayout-177]
	_ = x[NoteTransferedToStacker-201]
	_ = x[NoteHeldInBezel-206]
	_ = x[NotePaidIntoStoreAtPowerUp-203]
	_ = x[NotePaidIntoStackerAtPowerUp-202]
	_ = x[NoteDispensedAtPowerUp-205]
	_ = x[NoteFloatRemoved-199]
	_ = x[NoteFloatAttached-200]
	_ = x[DeviceFull-201]
}

const (
	_PollEventResponseCode_name_0 = "JamRecoveryErrorDuringPayout"
	_PollEventResponseCode_name_1 = "SmartEmptyingSmartEmptiedChannelDisableInitialisingCoinMechError"
	_PollEventResponseCode_name_2 = "EmptyingEmptiedCoinMechJammedCoinMechReturnPressedPayoutOutOfServiceNoteFloatRemovedNoteFloatAttachedNoteTransferedToStackerNotePaidIntoStackerAtPowerUpNotePaidIntoStoreAtPowerUpNoteStackingNoteDispensedAtPowerUpNoteHeldInBezel"
	_PollEventResponseCode_name_3 = "BarCodeTicketAcknowledgeDispensed"
	_PollEventResponseCode_name_4 = "JammedHaltedFloatingFloatedTimeoutDispensingNoteStoredInPayoutIncompletePayoutIncompleteFloatCashboxPaidCoinCreditNotePathOpenNoteClearedFromFrontNoteClearedToCashboxCashboxRemovedCashboxReplacedBarCodeTicketValidatedFraudAttemptStackerFullDisabledUnsafeNoteJamSafeNoteJamNoteStackedNoteRejectedNoteRejectingCreditNoteReadNote"
	_PollEventResponseCode_name_5 = "SlaveReset"
)

var (
	_PollEventResponseCode_index_0 = [...]uint8{0, 11, 28}
	_PollEventResponseCode_index_1 = [...]uint8{0, 13, 25, 39, 51, 64}
	_PollEventResponseCode_index_2 = [...]uint8{0, 8, 15, 29, 50, 68, 84, 101, 124, 152, 178, 190, 212, 227}
	_PollEventResponseCode_index_3 = [...]uint8{0, 24, 33}
	_PollEventResponseCode_index_4 = [...]uint16{0, 6, 12, 20, 27, 34, 44, 62, 78, 93, 104, 114, 126, 146, 166, 180, 195, 217, 229, 240, 248, 261, 272, 283, 295, 308, 318, 326}
)

func (i PollEventResponseCode) String() string {
	switch {
	case 176 <= i && i <= 177:
		i -= 176
		return _PollEventResponseCode_name_0[_PollEventResponseCode_index_0[i]:_PollEventResponseCode_index_0[i+1]]
	case 179 <= i && i <= 183:
		i -= 179
		return _PollEventResponseCode_name_1[_PollEventResponseCode_index_1[i]:_PollEventResponseCode_index_1[i+1]]
	case 194 <= i && i <= 206:
		i -= 194
		return _PollEventResponseCode_name_2[_PollEventResponseCode_index_2[i]:_PollEventResponseCode_index_2[i+1]]
	case 209 <= i && i <= 210:
		i -= 209
		return _PollEventResponseCode_name_3[_PollEventResponseCode_index_3[i]:_PollEventResponseCode_index_3[i+1]]
	case 213 <= i && i <= 239:
		i -= 213
		return _PollEventResponseCode_name_4[_PollEventResponseCode_index_4[i]:_PollEventResponseCode_index_4[i+1]]
	case i == 241:
		return _PollEventResponseCode_name_5
	default:
		return "PollEventResponseCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
